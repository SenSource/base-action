name: 'Base Check'
description: 'Check for base repository updates'

inputs:
  ssh_private_key:
    description: 'SSH private key for GitHub access'
    required: true

  github_pa_token:
    description: 'Personal access token (repo scope) for GH CLI access'
    required: true

  npm_token:
    description: 'NPM token for installing private modules during PR'
    required: false

  base_repo_config_file:
    description: 'Base repo config file (JSON)'
    required: true

  pr_labels:
    description: 'Labels to assign to PR'
    required: true

  pr_reviewer:
    description: 'Reviewer for PR'
    required: true

  issue_labels:
    description: 'Labels to assign to issue if merge conflicts arise'
    required: true

  issue_assignee:
    description: 'Assignee for isssue if merge conflicts arise'
    required: true

  committer_name:
    description: 'Name used for merge commits'
    required: true

  committer_email:
    description: 'Email used for merge commits'
    required: true

  update_branch:
    description: 'Branch name for updates'
    required: true

runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    SSH_PRIVATE_KEY: ${{ inputs.ssh_private_key }}
    GITHUB_PA_TOKEN: ${{ inputs.github_pa_token }}
    NPM_TOKEN: ${{ inputs.npm_token }}
    BASE_REPO_CONFIG_FILE: ${{ inputs.base_repo_config_file }}
    PR_LABELS: ${{ inputs.pr_labels }}
    PR_REVIEWER: ${{ inputs.pr_reviewer }}
    ISSUE_LABELS: ${{ inputs.issue_labels }}
    ISSUE_ASSIGNEE: ${{ inputs.issue_assignee }}
    UPDATE_BRANCH: ${{ inputs.update_branch }}
    GIT_AUTHOR_NAME: ${{ inputs.committer_name }}
    GIT_AUTHOR_EMAIL: ${{ inputs.committer_email }}
    GIT_COMMITTER_NAME: ${{ inputs.committer_name }}
    GIT_COMMITTER_EMAIL: ${{ inputs.committer_email }}
